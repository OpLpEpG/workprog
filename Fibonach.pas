unit Fibonach;

interface

uses System.SysUtils;

procedure Encode(const Data: array of Word; Bits: Integer; var CurBit: Boolean; var bin: TArray<Boolean>);
procedure CreateSuncro(Bits: Integer; var CurBit: Boolean; var bin: TArray<Boolean>);
function Decode(const Data: Integer; out Res: Integer): Boolean;

implementation

const
  FIBONACH_CODES: array [0..2583] of Word =($0,$1,$2,$4,$5,$8,$9,$A,$10,$11,$12,$14,$15,$20,$21,$22,$24,$25,$28,$29,$2A,$40,$41,$42,
$44,$45,$48,$49,$4A,$50,$51,$52,$54,$55,$80,$81,$82,$84,$85,$88,$89,$8A,$90,$91,$92,$94,$95,$A0,
$A1,$A2,$A4,$A5,$A8,$A9,$AA,$100,$101,$102,$104,$105,$108,$109,$10A,$110,$111,$112,$114,$115,$120,$121,$122,$124,
$125,$128,$129,$12A,$140,$141,$142,$144,$145,$148,$149,$14A,$150,$151,$152,$154,$155,$200,$201,$202,$204,$205,$208,$209,
$20A,$210,$211,$212,$214,$215,$220,$221,$222,$224,$225,$228,$229,$22A,$240,$241,$242,$244,$245,$248,$249,$24A,$250,$251,
$252,$254,$255,$280,$281,$282,$284,$285,$288,$289,$28A,$290,$291,$292,$294,$295,$2A0,$2A1,$2A2,$2A4,$2A5,$2A8,$2A9,$2AA,
$400,$401,$402,$404,$405,$408,$409,$40A,$410,$411,$412,$414,$415,$420,$421,$422,$424,$425,$428,$429,$42A,$440,$441,$442,
$444,$445,$448,$449,$44A,$450,$451,$452,$454,$455,$480,$481,$482,$484,$485,$488,$489,$48A,$490,$491,$492,$494,$495,$4A0,
$4A1,$4A2,$4A4,$4A5,$4A8,$4A9,$4AA,$500,$501,$502,$504,$505,$508,$509,$50A,$510,$511,$512,$514,$515,$520,$521,$522,$524,
$525,$528,$529,$52A,$540,$541,$542,$544,$545,$548,$549,$54A,$550,$551,$552,$554,$555,$800,$801,$802,$804,$805,$808,$809,
$80A,$810,$811,$812,$814,$815,$820,$821,$822,$824,$825,$828,$829,$82A,$840,$841,$842,$844,$845,$848,$849,$84A,$850,$851,
$852,$854,$855,$880,$881,$882,$884,$885,$888,$889,$88A,$890,$891,$892,$894,$895,$8A0,$8A1,$8A2,$8A4,$8A5,$8A8,$8A9,$8AA,
$900,$901,$902,$904,$905,$908,$909,$90A,$910,$911,$912,$914,$915,$920,$921,$922,$924,$925,$928,$929,$92A,$940,$941,$942,
$944,$945,$948,$949,$94A,$950,$951,$952,$954,$955,$A00,$A01,$A02,$A04,$A05,$A08,$A09,$A0A,$A10,$A11,$A12,$A14,$A15,$A20,
$A21,$A22,$A24,$A25,$A28,$A29,$A2A,$A40,$A41,$A42,$A44,$A45,$A48,$A49,$A4A,$A50,$A51,$A52,$A54,$A55,$A80,$A81,$A82,$A84,
$A85,$A88,$A89,$A8A,$A90,$A91,$A92,$A94,$A95,$AA0,$AA1,$AA2,$AA4,$AA5,$AA8,$AA9,$AAA,$1000,$1001,$1002,$1004,$1005,$1008,$1009,
$100A,$1010,$1011,$1012,$1014,$1015,$1020,$1021,$1022,$1024,$1025,$1028,$1029,$102A,$1040,$1041,$1042,$1044,$1045,$1048,$1049,$104A,$1050,$1051,
$1052,$1054,$1055,$1080,$1081,$1082,$1084,$1085,$1088,$1089,$108A,$1090,$1091,$1092,$1094,$1095,$10A0,$10A1,$10A2,$10A4,$10A5,$10A8,$10A9,$10AA,
$1100,$1101,$1102,$1104,$1105,$1108,$1109,$110A,$1110,$1111,$1112,$1114,$1115,$1120,$1121,$1122,$1124,$1125,$1128,$1129,$112A,$1140,$1141,$1142,
$1144,$1145,$1148,$1149,$114A,$1150,$1151,$1152,$1154,$1155,$1200,$1201,$1202,$1204,$1205,$1208,$1209,$120A,$1210,$1211,$1212,$1214,$1215,$1220,
$1221,$1222,$1224,$1225,$1228,$1229,$122A,$1240,$1241,$1242,$1244,$1245,$1248,$1249,$124A,$1250,$1251,$1252,$1254,$1255,$1280,$1281,$1282,$1284,
$1285,$1288,$1289,$128A,$1290,$1291,$1292,$1294,$1295,$12A0,$12A1,$12A2,$12A4,$12A5,$12A8,$12A9,$12AA,$1400,$1401,$1402,$1404,$1405,$1408,$1409,
$140A,$1410,$1411,$1412,$1414,$1415,$1420,$1421,$1422,$1424,$1425,$1428,$1429,$142A,$1440,$1441,$1442,$1444,$1445,$1448,$1449,$144A,$1450,$1451,
$1452,$1454,$1455,$1480,$1481,$1482,$1484,$1485,$1488,$1489,$148A,$1490,$1491,$1492,$1494,$1495,$14A0,$14A1,$14A2,$14A4,$14A5,$14A8,$14A9,$14AA,
$1500,$1501,$1502,$1504,$1505,$1508,$1509,$150A,$1510,$1511,$1512,$1514,$1515,$1520,$1521,$1522,$1524,$1525,$1528,$1529,$152A,$1540,$1541,$1542,
$1544,$1545,$1548,$1549,$154A,$1550,$1551,$1552,$1554,$1555,$2000,$2001,$2002,$2004,$2005,$2008,$2009,$200A,$2010,$2011,$2012,$2014,$2015,$2020,
$2021,$2022,$2024,$2025,$2028,$2029,$202A,$2040,$2041,$2042,$2044,$2045,$2048,$2049,$204A,$2050,$2051,$2052,$2054,$2055,$2080,$2081,$2082,$2084,
$2085,$2088,$2089,$208A,$2090,$2091,$2092,$2094,$2095,$20A0,$20A1,$20A2,$20A4,$20A5,$20A8,$20A9,$20AA,$2100,$2101,$2102,$2104,$2105,$2108,$2109,
$210A,$2110,$2111,$2112,$2114,$2115,$2120,$2121,$2122,$2124,$2125,$2128,$2129,$212A,$2140,$2141,$2142,$2144,$2145,$2148,$2149,$214A,$2150,$2151,
$2152,$2154,$2155,$2200,$2201,$2202,$2204,$2205,$2208,$2209,$220A,$2210,$2211,$2212,$2214,$2215,$2220,$2221,$2222,$2224,$2225,$2228,$2229,$222A,
$2240,$2241,$2242,$2244,$2245,$2248,$2249,$224A,$2250,$2251,$2252,$2254,$2255,$2280,$2281,$2282,$2284,$2285,$2288,$2289,$228A,$2290,$2291,$2292,
$2294,$2295,$22A0,$22A1,$22A2,$22A4,$22A5,$22A8,$22A9,$22AA,$2400,$2401,$2402,$2404,$2405,$2408,$2409,$240A,$2410,$2411,$2412,$2414,$2415,$2420,
$2421,$2422,$2424,$2425,$2428,$2429,$242A,$2440,$2441,$2442,$2444,$2445,$2448,$2449,$244A,$2450,$2451,$2452,$2454,$2455,$2480,$2481,$2482,$2484,
$2485,$2488,$2489,$248A,$2490,$2491,$2492,$2494,$2495,$24A0,$24A1,$24A2,$24A4,$24A5,$24A8,$24A9,$24AA,$2500,$2501,$2502,$2504,$2505,$2508,$2509,
$250A,$2510,$2511,$2512,$2514,$2515,$2520,$2521,$2522,$2524,$2525,$2528,$2529,$252A,$2540,$2541,$2542,$2544,$2545,$2548,$2549,$254A,$2550,$2551,
$2552,$2554,$2555,$2800,$2801,$2802,$2804,$2805,$2808,$2809,$280A,$2810,$2811,$2812,$2814,$2815,$2820,$2821,$2822,$2824,$2825,$2828,$2829,$282A,
$2840,$2841,$2842,$2844,$2845,$2848,$2849,$284A,$2850,$2851,$2852,$2854,$2855,$2880,$2881,$2882,$2884,$2885,$2888,$2889,$288A,$2890,$2891,$2892,
$2894,$2895,$28A0,$28A1,$28A2,$28A4,$28A5,$28A8,$28A9,$28AA,$2900,$2901,$2902,$2904,$2905,$2908,$2909,$290A,$2910,$2911,$2912,$2914,$2915,$2920,
$2921,$2922,$2924,$2925,$2928,$2929,$292A,$2940,$2941,$2942,$2944,$2945,$2948,$2949,$294A,$2950,$2951,$2952,$2954,$2955,$2A00,$2A01,$2A02,$2A04,
$2A05,$2A08,$2A09,$2A0A,$2A10,$2A11,$2A12,$2A14,$2A15,$2A20,$2A21,$2A22,$2A24,$2A25,$2A28,$2A29,$2A2A,$2A40,$2A41,$2A42,$2A44,$2A45,$2A48,$2A49,
$2A4A,$2A50,$2A51,$2A52,$2A54,$2A55,$2A80,$2A81,$2A82,$2A84,$2A85,$2A88,$2A89,$2A8A,$2A90,$2A91,$2A92,$2A94,$2A95,$2AA0,$2AA1,$2AA2,$2AA4,$2AA5,
$2AA8,$2AA9,$2AAA,$4000,$4001,$4002,$4004,$4005,$4008,$4009,$400A,$4010,$4011,$4012,$4014,$4015,$4020,$4021,$4022,$4024,$4025,$4028,$4029,$402A,
$4040,$4041,$4042,$4044,$4045,$4048,$4049,$404A,$4050,$4051,$4052,$4054,$4055,$4080,$4081,$4082,$4084,$4085,$4088,$4089,$408A,$4090,$4091,$4092,
$4094,$4095,$40A0,$40A1,$40A2,$40A4,$40A5,$40A8,$40A9,$40AA,$4100,$4101,$4102,$4104,$4105,$4108,$4109,$410A,$4110,$4111,$4112,$4114,$4115,$4120,
$4121,$4122,$4124,$4125,$4128,$4129,$412A,$4140,$4141,$4142,$4144,$4145,$4148,$4149,$414A,$4150,$4151,$4152,$4154,$4155,$4200,$4201,$4202,$4204,
$4205,$4208,$4209,$420A,$4210,$4211,$4212,$4214,$4215,$4220,$4221,$4222,$4224,$4225,$4228,$4229,$422A,$4240,$4241,$4242,$4244,$4245,$4248,$4249,
$424A,$4250,$4251,$4252,$4254,$4255,$4280,$4281,$4282,$4284,$4285,$4288,$4289,$428A,$4290,$4291,$4292,$4294,$4295,$42A0,$42A1,$42A2,$42A4,$42A5,
$42A8,$42A9,$42AA,$4400,$4401,$4402,$4404,$4405,$4408,$4409,$440A,$4410,$4411,$4412,$4414,$4415,$4420,$4421,$4422,$4424,$4425,$4428,$4429,$442A,
$4440,$4441,$4442,$4444,$4445,$4448,$4449,$444A,$4450,$4451,$4452,$4454,$4455,$4480,$4481,$4482,$4484,$4485,$4488,$4489,$448A,$4490,$4491,$4492,
$4494,$4495,$44A0,$44A1,$44A2,$44A4,$44A5,$44A8,$44A9,$44AA,$4500,$4501,$4502,$4504,$4505,$4508,$4509,$450A,$4510,$4511,$4512,$4514,$4515,$4520,
$4521,$4522,$4524,$4525,$4528,$4529,$452A,$4540,$4541,$4542,$4544,$4545,$4548,$4549,$454A,$4550,$4551,$4552,$4554,$4555,$4800,$4801,$4802,$4804,
$4805,$4808,$4809,$480A,$4810,$4811,$4812,$4814,$4815,$4820,$4821,$4822,$4824,$4825,$4828,$4829,$482A,$4840,$4841,$4842,$4844,$4845,$4848,$4849,
$484A,$4850,$4851,$4852,$4854,$4855,$4880,$4881,$4882,$4884,$4885,$4888,$4889,$488A,$4890,$4891,$4892,$4894,$4895,$48A0,$48A1,$48A2,$48A4,$48A5,
$48A8,$48A9,$48AA,$4900,$4901,$4902,$4904,$4905,$4908,$4909,$490A,$4910,$4911,$4912,$4914,$4915,$4920,$4921,$4922,$4924,$4925,$4928,$4929,$492A,
$4940,$4941,$4942,$4944,$4945,$4948,$4949,$494A,$4950,$4951,$4952,$4954,$4955,$4A00,$4A01,$4A02,$4A04,$4A05,$4A08,$4A09,$4A0A,$4A10,$4A11,$4A12,
$4A14,$4A15,$4A20,$4A21,$4A22,$4A24,$4A25,$4A28,$4A29,$4A2A,$4A40,$4A41,$4A42,$4A44,$4A45,$4A48,$4A49,$4A4A,$4A50,$4A51,$4A52,$4A54,$4A55,$4A80,
$4A81,$4A82,$4A84,$4A85,$4A88,$4A89,$4A8A,$4A90,$4A91,$4A92,$4A94,$4A95,$4AA0,$4AA1,$4AA2,$4AA4,$4AA5,$4AA8,$4AA9,$4AAA,$5000,$5001,$5002,$5004,
$5005,$5008,$5009,$500A,$5010,$5011,$5012,$5014,$5015,$5020,$5021,$5022,$5024,$5025,$5028,$5029,$502A,$5040,$5041,$5042,$5044,$5045,$5048,$5049,
$504A,$5050,$5051,$5052,$5054,$5055,$5080,$5081,$5082,$5084,$5085,$5088,$5089,$508A,$5090,$5091,$5092,$5094,$5095,$50A0,$50A1,$50A2,$50A4,$50A5,
$50A8,$50A9,$50AA,$5100,$5101,$5102,$5104,$5105,$5108,$5109,$510A,$5110,$5111,$5112,$5114,$5115,$5120,$5121,$5122,$5124,$5125,$5128,$5129,$512A,
$5140,$5141,$5142,$5144,$5145,$5148,$5149,$514A,$5150,$5151,$5152,$5154,$5155,$5200,$5201,$5202,$5204,$5205,$5208,$5209,$520A,$5210,$5211,$5212,
$5214,$5215,$5220,$5221,$5222,$5224,$5225,$5228,$5229,$522A,$5240,$5241,$5242,$5244,$5245,$5248,$5249,$524A,$5250,$5251,$5252,$5254,$5255,$5280,
$5281,$5282,$5284,$5285,$5288,$5289,$528A,$5290,$5291,$5292,$5294,$5295,$52A0,$52A1,$52A2,$52A4,$52A5,$52A8,$52A9,$52AA,$5400,$5401,$5402,$5404,
$5405,$5408,$5409,$540A,$5410,$5411,$5412,$5414,$5415,$5420,$5421,$5422,$5424,$5425,$5428,$5429,$542A,$5440,$5441,$5442,$5444,$5445,$5448,$5449,
$544A,$5450,$5451,$5452,$5454,$5455,$5480,$5481,$5482,$5484,$5485,$5488,$5489,$548A,$5490,$5491,$5492,$5494,$5495,$54A0,$54A1,$54A2,$54A4,$54A5,
$54A8,$54A9,$54AA,$5500,$5501,$5502,$5504,$5505,$5508,$5509,$550A,$5510,$5511,$5512,$5514,$5515,$5520,$5521,$5522,$5524,$5525,$5528,$5529,$552A,
$5540,$5541,$5542,$5544,$5545,$5548,$5549,$554A,$5550,$5551,$5552,$5554,$5555,$8000,$8001,$8002,$8004,$8005,$8008,$8009,$800A,$8010,$8011,$8012,
$8014,$8015,$8020,$8021,$8022,$8024,$8025,$8028,$8029,$802A,$8040,$8041,$8042,$8044,$8045,$8048,$8049,$804A,$8050,$8051,$8052,$8054,$8055,$8080,
$8081,$8082,$8084,$8085,$8088,$8089,$808A,$8090,$8091,$8092,$8094,$8095,$80A0,$80A1,$80A2,$80A4,$80A5,$80A8,$80A9,$80AA,$8100,$8101,$8102,$8104,
$8105,$8108,$8109,$810A,$8110,$8111,$8112,$8114,$8115,$8120,$8121,$8122,$8124,$8125,$8128,$8129,$812A,$8140,$8141,$8142,$8144,$8145,$8148,$8149,
$814A,$8150,$8151,$8152,$8154,$8155,$8200,$8201,$8202,$8204,$8205,$8208,$8209,$820A,$8210,$8211,$8212,$8214,$8215,$8220,$8221,$8222,$8224,$8225,
$8228,$8229,$822A,$8240,$8241,$8242,$8244,$8245,$8248,$8249,$824A,$8250,$8251,$8252,$8254,$8255,$8280,$8281,$8282,$8284,$8285,$8288,$8289,$828A,
$8290,$8291,$8292,$8294,$8295,$82A0,$82A1,$82A2,$82A4,$82A5,$82A8,$82A9,$82AA,$8400,$8401,$8402,$8404,$8405,$8408,$8409,$840A,$8410,$8411,$8412,
$8414,$8415,$8420,$8421,$8422,$8424,$8425,$8428,$8429,$842A,$8440,$8441,$8442,$8444,$8445,$8448,$8449,$844A,$8450,$8451,$8452,$8454,$8455,$8480,
$8481,$8482,$8484,$8485,$8488,$8489,$848A,$8490,$8491,$8492,$8494,$8495,$84A0,$84A1,$84A2,$84A4,$84A5,$84A8,$84A9,$84AA,$8500,$8501,$8502,$8504,
$8505,$8508,$8509,$850A,$8510,$8511,$8512,$8514,$8515,$8520,$8521,$8522,$8524,$8525,$8528,$8529,$852A,$8540,$8541,$8542,$8544,$8545,$8548,$8549,
$854A,$8550,$8551,$8552,$8554,$8555,$8800,$8801,$8802,$8804,$8805,$8808,$8809,$880A,$8810,$8811,$8812,$8814,$8815,$8820,$8821,$8822,$8824,$8825,
$8828,$8829,$882A,$8840,$8841,$8842,$8844,$8845,$8848,$8849,$884A,$8850,$8851,$8852,$8854,$8855,$8880,$8881,$8882,$8884,$8885,$8888,$8889,$888A,
$8890,$8891,$8892,$8894,$8895,$88A0,$88A1,$88A2,$88A4,$88A5,$88A8,$88A9,$88AA,$8900,$8901,$8902,$8904,$8905,$8908,$8909,$890A,$8910,$8911,$8912,
$8914,$8915,$8920,$8921,$8922,$8924,$8925,$8928,$8929,$892A,$8940,$8941,$8942,$8944,$8945,$8948,$8949,$894A,$8950,$8951,$8952,$8954,$8955,$8A00,
$8A01,$8A02,$8A04,$8A05,$8A08,$8A09,$8A0A,$8A10,$8A11,$8A12,$8A14,$8A15,$8A20,$8A21,$8A22,$8A24,$8A25,$8A28,$8A29,$8A2A,$8A40,$8A41,$8A42,$8A44,
$8A45,$8A48,$8A49,$8A4A,$8A50,$8A51,$8A52,$8A54,$8A55,$8A80,$8A81,$8A82,$8A84,$8A85,$8A88,$8A89,$8A8A,$8A90,$8A91,$8A92,$8A94,$8A95,$8AA0,$8AA1,
$8AA2,$8AA4,$8AA5,$8AA8,$8AA9,$8AAA,$9000,$9001,$9002,$9004,$9005,$9008,$9009,$900A,$9010,$9011,$9012,$9014,$9015,$9020,$9021,$9022,$9024,$9025,
$9028,$9029,$902A,$9040,$9041,$9042,$9044,$9045,$9048,$9049,$904A,$9050,$9051,$9052,$9054,$9055,$9080,$9081,$9082,$9084,$9085,$9088,$9089,$908A,
$9090,$9091,$9092,$9094,$9095,$90A0,$90A1,$90A2,$90A4,$90A5,$90A8,$90A9,$90AA,$9100,$9101,$9102,$9104,$9105,$9108,$9109,$910A,$9110,$9111,$9112,
$9114,$9115,$9120,$9121,$9122,$9124,$9125,$9128,$9129,$912A,$9140,$9141,$9142,$9144,$9145,$9148,$9149,$914A,$9150,$9151,$9152,$9154,$9155,$9200,
$9201,$9202,$9204,$9205,$9208,$9209,$920A,$9210,$9211,$9212,$9214,$9215,$9220,$9221,$9222,$9224,$9225,$9228,$9229,$922A,$9240,$9241,$9242,$9244,
$9245,$9248,$9249,$924A,$9250,$9251,$9252,$9254,$9255,$9280,$9281,$9282,$9284,$9285,$9288,$9289,$928A,$9290,$9291,$9292,$9294,$9295,$92A0,$92A1,
$92A2,$92A4,$92A5,$92A8,$92A9,$92AA,$9400,$9401,$9402,$9404,$9405,$9408,$9409,$940A,$9410,$9411,$9412,$9414,$9415,$9420,$9421,$9422,$9424,$9425,
$9428,$9429,$942A,$9440,$9441,$9442,$9444,$9445,$9448,$9449,$944A,$9450,$9451,$9452,$9454,$9455,$9480,$9481,$9482,$9484,$9485,$9488,$9489,$948A,
$9490,$9491,$9492,$9494,$9495,$94A0,$94A1,$94A2,$94A4,$94A5,$94A8,$94A9,$94AA,$9500,$9501,$9502,$9504,$9505,$9508,$9509,$950A,$9510,$9511,$9512,
$9514,$9515,$9520,$9521,$9522,$9524,$9525,$9528,$9529,$952A,$9540,$9541,$9542,$9544,$9545,$9548,$9549,$954A,$9550,$9551,$9552,$9554,$9555,$A000,
$A001,$A002,$A004,$A005,$A008,$A009,$A00A,$A010,$A011,$A012,$A014,$A015,$A020,$A021,$A022,$A024,$A025,$A028,$A029,$A02A,$A040,$A041,$A042,$A044,
$A045,$A048,$A049,$A04A,$A050,$A051,$A052,$A054,$A055,$A080,$A081,$A082,$A084,$A085,$A088,$A089,$A08A,$A090,$A091,$A092,$A094,$A095,$A0A0,$A0A1,
$A0A2,$A0A4,$A0A5,$A0A8,$A0A9,$A0AA,$A100,$A101,$A102,$A104,$A105,$A108,$A109,$A10A,$A110,$A111,$A112,$A114,$A115,$A120,$A121,$A122,$A124,$A125,
$A128,$A129,$A12A,$A140,$A141,$A142,$A144,$A145,$A148,$A149,$A14A,$A150,$A151,$A152,$A154,$A155,$A200,$A201,$A202,$A204,$A205,$A208,$A209,$A20A,
$A210,$A211,$A212,$A214,$A215,$A220,$A221,$A222,$A224,$A225,$A228,$A229,$A22A,$A240,$A241,$A242,$A244,$A245,$A248,$A249,$A24A,$A250,$A251,$A252,
$A254,$A255,$A280,$A281,$A282,$A284,$A285,$A288,$A289,$A28A,$A290,$A291,$A292,$A294,$A295,$A2A0,$A2A1,$A2A2,$A2A4,$A2A5,$A2A8,$A2A9,$A2AA,$A400,
$A401,$A402,$A404,$A405,$A408,$A409,$A40A,$A410,$A411,$A412,$A414,$A415,$A420,$A421,$A422,$A424,$A425,$A428,$A429,$A42A,$A440,$A441,$A442,$A444,
$A445,$A448,$A449,$A44A,$A450,$A451,$A452,$A454,$A455,$A480,$A481,$A482,$A484,$A485,$A488,$A489,$A48A,$A490,$A491,$A492,$A494,$A495,$A4A0,$A4A1,
$A4A2,$A4A4,$A4A5,$A4A8,$A4A9,$A4AA,$A500,$A501,$A502,$A504,$A505,$A508,$A509,$A50A,$A510,$A511,$A512,$A514,$A515,$A520,$A521,$A522,$A524,$A525,
$A528,$A529,$A52A,$A540,$A541,$A542,$A544,$A545,$A548,$A549,$A54A,$A550,$A551,$A552,$A554,$A555,$A800,$A801,$A802,$A804,$A805,$A808,$A809,$A80A,
$A810,$A811,$A812,$A814,$A815,$A820,$A821,$A822,$A824,$A825,$A828,$A829,$A82A,$A840,$A841,$A842,$A844,$A845,$A848,$A849,$A84A,$A850,$A851,$A852,
$A854,$A855,$A880,$A881,$A882,$A884,$A885,$A888,$A889,$A88A,$A890,$A891,$A892,$A894,$A895,$A8A0,$A8A1,$A8A2,$A8A4,$A8A5,$A8A8,$A8A9,$A8AA,$A900,
$A901,$A902,$A904,$A905,$A908,$A909,$A90A,$A910,$A911,$A912,$A914,$A915,$A920,$A921,$A922,$A924,$A925,$A928,$A929,$A92A,$A940,$A941,$A942,$A944,
$A945,$A948,$A949,$A94A,$A950,$A951,$A952,$A954,$A955,$AA00,$AA01,$AA02,$AA04,$AA05,$AA08,$AA09,$AA0A,$AA10,$AA11,$AA12,$AA14,$AA15,$AA20,$AA21,
$AA22,$AA24,$AA25,$AA28,$AA29,$AA2A,$AA40,$AA41,$AA42,$AA44,$AA45,$AA48,$AA49,$AA4A,$AA50,$AA51,$AA52,$AA54,$AA55,$AA80,$AA81,$AA82,$AA84,$AA85,
$AA88,$AA89,$AA8A,$AA90,$AA91,$AA92,$AA94,$AA95,$AAA0,$AAA1,$AAA2,$AAA4,$AAA5,$AAA8,$AAA9,$AAAA);


procedure CreateSuncro(Bits: Integer; var CurBit: Boolean; var bin: TArray<Boolean>);
 const
  SINCRO: array[0..7] of Integer = (5,  123, 1850, 1837, 1691, 2345, 1725, 1973);
  var
   n: Integer;
   procedure AddBit(bit: Boolean);
    var
     i: Integer;
   begin
     if not bit then CurBit := not CurBit;
     for I := 0 to bits-1 do bin[n+i] := CurBit;
     Inc(n, bits);
   end;
  var
   b,i: Integer;
   cod: Word;
begin
  n := 0;
  SetLength(bin, Bits*(Length(SINCRO)*16));
  for I := 0 to Length(SINCRO)-1 do
   begin
    if SINCRO[i] > 2583 then raise Exception.Create('BAD NUMBER FIBONAHI > 2583');
    cod := FIBONACH_CODES[SINCRO[i]];
    for b := 0 to 15 do
     begin
      AddBit((cod and $8000) <> 0);
      cod := cod shl 1;
     end;
   end;
end;

procedure Encode(const Data: array of Word; Bits: Integer; var CurBit: Boolean; var bin: TArray<Boolean>);
  var
   n: Integer;
   procedure AddBit(bit: Boolean);
    var
     i: Integer;
   begin
     if not bit then CurBit := not CurBit;
     for I := 0 to bits-1 do bin[n+i] := CurBit;
     Inc(n, bits);
   end;
  var
   b,i: Integer;
   cod: Word;
begin
  n := Length(bin);
  SetLength(bin, n + Bits*(Length(Data)*17{ + 1}) );
  for I := 0 to Length(Data)-1 do
   begin
    if Data[i] > 2583 then raise Exception.Create('BAD NUMBER FIBONAHI > 2583');
    cod := FIBONACH_CODES[Data[i]];
    for b := 0 to 15 do
     begin
      AddBit((cod and $8000) <> 0);
      cod := cod shl 1;
     end;
    AddBit(False);
   end;
//  CurBit := True;
//  AddBit(True);
end;

function Decode(const Data: Integer; out Res: Integer): Boolean;
 var
  i : Integer;
begin
  Result := False;
  if Data > $AAAA then Res := 2583
  else for i := 0 to Length(FIBONACH_CODES)-1 do
   if FIBONACH_CODES[i] = Data then
    begin
     Res := i;
     Exit(True)
    end
   else if FIBONACH_CODES[i] > Data then
    begin
     Res := i-1;
     Exit(False)
    end;
end;

end.
